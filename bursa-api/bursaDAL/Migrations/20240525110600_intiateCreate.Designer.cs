// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bursaDAL;

#nullable disable

namespace bursaDAL.Migrations
{
    [DbContext(typeof(BursaContext))]
    [Migration("20240525110600_intiateCreate")]
    partial class intiateCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bursaDAL.Modals.AcademicYear", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("InstitutionId");

                    b.ToTable("AcademicYears");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b24b5369-01c2-47c8-999c-38d861721bdd"),
                            CreatedTimestamp = new DateTime(2024, 5, 25, 13, 5, 59, 473, DateTimeKind.Local).AddTicks(4466),
                            InstitutionId = new Guid("0d018d4b-9b97-437d-8f33-f47ebbdd0aa3"),
                            Period = 12,
                            Year = 2024
                        },
                        new
                        {
                            Id = new Guid("13dce65b-e2a5-4abe-b62c-7799ba88402e"),
                            CreatedTimestamp = new DateTime(2024, 5, 25, 13, 5, 59, 473, DateTimeKind.Local).AddTicks(4959),
                            InstitutionId = new Guid("0d018d4b-9b97-437d-8f33-f47ebbdd0aa3"),
                            Period = 11,
                            Year = 2024
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activity")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("bursaDAL.Modals.Allowance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllowanceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("BursaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PaymentCycle")
                        .HasColumnType("int");

                    b.Property<Guid?>("PocketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalNumberPayments")
                        .HasColumnType("int");

                    b.Property<int>("TotalNumberPaymentsMade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("AllowanceTypeId");

                    b.HasIndex("BursaryId");

                    b.HasIndex("PocketId");

                    b.ToTable("Allowances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2aa8bf15-e2c4-499c-9097-7c5f196f2641"),
                            AllowanceTypeId = new Guid("a5aa0a8e-6988-486a-9975-ca16d99b4149"),
                            Amount = 12000.00m,
                            BursaryId = new Guid("b1da32d9-858b-4e42-9470-d04cab92940f"),
                            EndTimestamp = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Travel Allowance",
                            PaymentCycle = 3,
                            StartTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumberPayments = 10,
                            TotalNumberPaymentsMade = 0
                        },
                        new
                        {
                            Id = new Guid("c803c4d5-abe7-45ef-83f5-235cea13deb5"),
                            AllowanceTypeId = new Guid("c445390f-e829-4d56-9bd7-d51de39dd718"),
                            Amount = 13000.00m,
                            BursaryId = new Guid("b1da32d9-858b-4e42-9470-d04cab92940f"),
                            EndTimestamp = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Food Allowance",
                            PaymentCycle = 3,
                            StartTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumberPayments = 12,
                            TotalNumberPaymentsMade = 0
                        },
                        new
                        {
                            Id = new Guid("dc3d722a-a9fb-42d1-8b6b-38052fb4db53"),
                            AllowanceTypeId = new Guid("22180315-f107-4737-983a-99f8eb2a48a9"),
                            Amount = 5000.00m,
                            BursaryId = new Guid("b1da32d9-858b-4e42-9470-d04cab92940f"),
                            EndTimestamp = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Book Allowance",
                            PaymentCycle = 2,
                            StartTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumberPayments = 2,
                            TotalNumberPaymentsMade = 0
                        },
                        new
                        {
                            Id = new Guid("39a725c3-1605-47f9-8554-e376da69e1b3"),
                            AllowanceTypeId = new Guid("9ab195d3-0373-4284-a341-f094ad2bff94"),
                            Amount = 45000.00m,
                            BursaryId = new Guid("b1da32d9-858b-4e42-9470-d04cab92940f"),
                            EndTimestamp = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Residence Allowance",
                            PaymentCycle = 3,
                            StartTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalNumberPayments = 12,
                            TotalNumberPaymentsMade = 0
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.AllowanceType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("AllowanceTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5aa0a8e-6988-486a-9975-ca16d99b4149"),
                            Name = "Travel Allowance"
                        },
                        new
                        {
                            Id = new Guid("c445390f-e829-4d56-9bd7-d51de39dd718"),
                            Name = "Food Allowance"
                        },
                        new
                        {
                            Id = new Guid("22180315-f107-4737-983a-99f8eb2a48a9"),
                            Name = "Book Allowance"
                        },
                        new
                        {
                            Id = new Guid("9ab195d3-0373-4284-a341-f094ad2bff94"),
                            Name = "Residence Allowance"
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.Bursary", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("FinancingInstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("FinancingInstitutionId");

                    b.ToTable("Bursaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1da32d9-858b-4e42-9470-d04cab92940f"),
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The National Student Financial Aid Scheme (NSFAS) is a South African government student financial aid scheme which provides financial aid to undergraduate students who need financial assistance to assist them to pay for the cost of their tertiary education.",
                            FinancingInstitutionId = new Guid("4b53bd2d-0e83-4117-9274-03197a7f2473"),
                            Image = "https://www.nsfas.org.za/content/images/logo.png",
                            IsActive = true,
                            Name = "NSFAS - PrivateResidence",
                            Notes = "",
                            StatusCode = 1,
                            TotalAmount = 75000m,
                            Type = 1,
                            UpdatedTimestamp = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.BursaryBeneficiary", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BursaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("BursaryId");

                    b.ToTable("BursaryBeneficiaries");
                });

            modelBuilder.Entity("bursaDAL.Modals.BursaryOfficer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BursaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("BursaryId");

                    b.HasIndex("OfficerId");

                    b.ToTable("BursaryOfficers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29d86a7d-f193-4132-aaa7-ff9a2780da7a"),
                            BursaryId = new Guid("b1da32d9-858b-4e42-9470-d04cab92940f"),
                            CreateTimestamp = new DateTime(2024, 5, 25, 13, 5, 59, 480, DateTimeKind.Local).AddTicks(4254),
                            OfficerId = new Guid("35996b95-cce1-4bf0-88c8-a26a99032e30")
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("RoleId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d22686a-2b92-481a-9e21-064211b7c949"),
                            Access = "R-W-D",
                            IsActive = true,
                            Name = "all"
                        },
                        new
                        {
                            Id = new Guid("211eb55a-13bf-4f84-8f8e-bcbf9ce6564a"),
                            Access = "R-W-D",
                            IsActive = true,
                            Name = "user"
                        },
                        new
                        {
                            Id = new Guid("3d27613b-37ac-49e3-b143-dbe193975974"),
                            Access = "R-W-D",
                            IsActive = true,
                            Name = "Bursary"
                        },
                        new
                        {
                            Id = new Guid("65fa4c90-600a-4cb6-9961-60fe359c71b4"),
                            Access = "R-W-D",
                            IsActive = true,
                            Name = "allowance"
                        },
                        new
                        {
                            Id = new Guid("6b7eb258-cdf1-40c7-a457-7fd93abcdd56"),
                            Access = "R-W-D",
                            IsActive = true,
                            Name = "residency"
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.FinancingInstitution", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("FinancingInstitutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b53bd2d-0e83-4117-9274-03197a7f2473"),
                            Category = 3,
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The National Student Financial Aid Scheme (NSFAS) is a South African government student financial aid scheme which provides financial aid to undergraduate students who need financial assistance to assist them to pay for the cost of their tertiary education.",
                            Image = "https://www.nsfas.org.za/content/images/logo.png",
                            Name = "National Student Financial Aid Scheme",
                            UpdatedTimestamp = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmailContactDetails")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PhoneContactDetails")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d018d4b-9b97-437d-8f33-f47ebbdd0aa3"),
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "University of Stellenbosch is a public research university situated in Stellenbosch, a town in the Western Cape province of South Africa. Stellenbosch is jointly the oldest university in South Africa and the oldest extant university in Sub-Saharan Africa alongside the University of Cape Town which received full university status on the same day in 1918.",
                            Image = "https://www.sun.ac.za/english/corporate-identity/PublishingImages/Downloads/Su%20Logo/US%20korporatiewe%20logo%20stack%20vertikaal_CMYK.jpg",
                            Name = "Univerity of Stellenbosch",
                            UpdatedTimestamp = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("BeneficiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPeriodPaid")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("PaymentOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaymentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PocketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("PaymentOfficerId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be049cdd-8eba-40b3-a465-dadd1fc70bf6"),
                            Amount = 1200.00m,
                            BeneficiaryId = new Guid("122716c8-522b-4d6e-af92-04dd7208b862"),
                            CreateTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfPeriodPaid = 1,
                            PaymentDescription = "Travel Allowance Payment",
                            PaymentOfficerId = new Guid("35996b95-cce1-4bf0-88c8-a26a99032e30"),
                            PaymentStatus = 1,
                            PaymentTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTypeId = new Guid("2aa8bf15-e2c4-499c-9097-7c5f196f2641"),
                            PocketId = new Guid("6909a8f7-58d3-4430-8ced-b57628c46235"),
                            UpdatedTimestamp = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.PaymentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllowanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BeneficiaryIdNumber")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("OfficerPersonnelId")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PaymentDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PaymentRef")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("AllowanceId");

                    b.ToTable("PaymentHistories");
                });

            modelBuilder.Entity("bursaDAL.Modals.Pocket", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LivingArrangement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdateTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("BeneficiaryId");

                    b.ToTable("Pockets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6909a8f7-58d3-4430-8ced-b57628c46235"),
                            BeneficiaryId = new Guid("122716c8-522b-4d6e-af92-04dd7208b862"),
                            CreateTimestamp = new DateTime(2024, 5, 25, 13, 5, 59, 493, DateTimeKind.Local).AddTicks(9437),
                            IsActive = true,
                            LivingArrangement = 1,
                            Name = "Student - [Residence] Pocket",
                            UpdateTimestamp = new DateTime(2024, 5, 25, 13, 5, 59, 493, DateTimeKind.Local).AddTicks(9443)
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.Residence", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAccredited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LandLordEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LandLordName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LandLordPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LeaseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LivingArrangement")
                        .HasColumnType("int");

                    b.Property<int>("ResidenceVerificationStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ResidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ResidentId");

                    b.ToTable("Residences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4e13f22-8fc4-4dc8-a598-ccc6c8b3377c"),
                            Address = "4 Beech Close, Macassar, Cape Town, 7130",
                            CreateTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTimestamp = new DateTime(2024, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAccredited = true,
                            IsActive = true,
                            LandLordEmail = "mrjd@gmail.com",
                            LandLordName = "Mr. John Doe",
                            LandLordPhone = "0810000000",
                            LeaseUrl = "https://drive.google.com/file/d/1g8Q-_eWb9o9n02Tgo2dYlyrnZKsoRBiT/view?usp=drive_link",
                            LivingArrangement = 1,
                            ResidenceVerificationStatus = 1,
                            ResidentId = new Guid("122716c8-522b-4d6e-af92-04dd7208b862"),
                            StartTimestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 45000.00m,
                            UpdatedTimestamp = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd7ee8cf-9075-403a-82dd-67100a57115e"),
                            Description = "SuperAdmin",
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = new Guid("7a3a9989-fa57-4186-ae1e-feb53d641d17"),
                            Description = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("a8b05ec0-9a82-4b7a-9d41-9829b16e2cf0"),
                            Description = "Officer",
                            Name = "Officer"
                        },
                        new
                        {
                            Id = new Guid("6620edbe-d4da-4b52-8068-9fc35abd0fee"),
                            Description = "Student",
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HashIdNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PersonnelId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SaltIdNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d76cbcf-b3de-426d-b105-faa16b8536a4"),
                            DateOfBirth = new DateTime(1993, 2, 27, 10, 0, 30, 0, DateTimeKind.Unspecified),
                            Email = "mrbtmkhabela+1@gmail.com",
                            IdNumber = "9008122255089",
                            IsActive = true,
                            Name = "Super Admin",
                            PersonnelId = "100000001",
                            PhoneNumber = "0810000000",
                            RoleId = new Guid("dd7ee8cf-9075-403a-82dd-67100a57115e"),
                            Surname = "Super Admin"
                        },
                        new
                        {
                            Id = new Guid("e9446c7d-8328-490d-8a1f-3c180bb95cfd"),
                            DateOfBirth = new DateTime(1983, 12, 7, 10, 0, 30, 0, DateTimeKind.Unspecified),
                            Email = "mrbtmkhabela+2@gmail.com",
                            IdNumber = "9202018795089",
                            IsActive = true,
                            Name = "Admin",
                            PersonnelId = "100000002",
                            PhoneNumber = "081000001",
                            RoleId = new Guid("7a3a9989-fa57-4186-ae1e-feb53d641d17"),
                            Surname = "Admin"
                        },
                        new
                        {
                            Id = new Guid("35996b95-cce1-4bf0-88c8-a26a99032e30"),
                            DateOfBirth = new DateTime(1983, 12, 7, 10, 0, 30, 0, DateTimeKind.Unspecified),
                            Email = "mrbtmkhabela+3@gmail.com",
                            IdNumber = "2106098795089",
                            IsActive = true,
                            Name = "Officer",
                            PersonnelId = "100000003",
                            PhoneNumber = "081000002",
                            RoleId = new Guid("a8b05ec0-9a82-4b7a-9d41-9829b16e2cf0"),
                            SaltIdNumber = "102",
                            Surname = "Officer"
                        },
                        new
                        {
                            Id = new Guid("122716c8-522b-4d6e-af92-04dd7208b862"),
                            DateOfBirth = new DateTime(1983, 12, 7, 10, 0, 30, 0, DateTimeKind.Unspecified),
                            Email = "mrbtmkhabela+3@gmail.com",
                            IdNumber = "2106098795089",
                            IsActive = true,
                            Name = "Student",
                            PersonnelId = "100000004",
                            PhoneNumber = "081000002",
                            RoleId = new Guid("6620edbe-d4da-4b52-8068-9fc35abd0fee"),
                            SaltIdNumber = "102",
                            Surname = "Student"
                        });
                });

            modelBuilder.Entity("bursaDAL.Modals.AcademicYear", b =>
                {
                    b.HasOne("bursaDAL.Modals.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("bursaDAL.Modals.ActivityLog", b =>
                {
                    b.HasOne("bursaDAL.Modals.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("bursaDAL.Modals.Allowance", b =>
                {
                    b.HasOne("bursaDAL.Modals.AllowanceType", "AllowanceType")
                        .WithMany()
                        .HasForeignKey("AllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bursaDAL.Modals.Bursary", "Bursary")
                        .WithMany()
                        .HasForeignKey("BursaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bursaDAL.Modals.Pocket", null)
                        .WithMany("Allowances")
                        .HasForeignKey("PocketId");

                    b.Navigation("AllowanceType");

                    b.Navigation("Bursary");
                });

            modelBuilder.Entity("bursaDAL.Modals.Bursary", b =>
                {
                    b.HasOne("bursaDAL.Modals.FinancingInstitution", "FinancingInstitution")
                        .WithMany("Bursaries")
                        .HasForeignKey("FinancingInstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancingInstitution");
                });

            modelBuilder.Entity("bursaDAL.Modals.BursaryBeneficiary", b =>
                {
                    b.HasOne("bursaDAL.Modals.User", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bursaDAL.Modals.Bursary", "Bursary")
                        .WithMany()
                        .HasForeignKey("BursaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiary");

                    b.Navigation("Bursary");
                });

            modelBuilder.Entity("bursaDAL.Modals.BursaryOfficer", b =>
                {
                    b.HasOne("bursaDAL.Modals.Bursary", "Bursary")
                        .WithMany()
                        .HasForeignKey("BursaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bursaDAL.Modals.User", "Officer")
                        .WithMany()
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bursary");

                    b.Navigation("Officer");
                });

            modelBuilder.Entity("bursaDAL.Modals.Feature", b =>
                {
                    b.HasOne("bursaDAL.Modals.Role", null)
                        .WithMany("Features")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("bursaDAL.Modals.Payment", b =>
                {
                    b.HasOne("bursaDAL.Modals.User", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bursaDAL.Modals.User", "PaymentOfficer")
                        .WithMany()
                        .HasForeignKey("PaymentOfficerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("bursaDAL.Modals.Allowance", "Allowance")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Beneficiary");

                    b.Navigation("PaymentOfficer");
                });

            modelBuilder.Entity("bursaDAL.Modals.PaymentHistory", b =>
                {
                    b.HasOne("bursaDAL.Modals.Allowance", "Allowance")
                        .WithMany()
                        .HasForeignKey("AllowanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allowance");
                });

            modelBuilder.Entity("bursaDAL.Modals.Pocket", b =>
                {
                    b.HasOne("bursaDAL.Modals.User", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Beneficiary");
                });

            modelBuilder.Entity("bursaDAL.Modals.Residence", b =>
                {
                    b.HasOne("bursaDAL.Modals.User", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("bursaDAL.Modals.User", b =>
                {
                    b.HasOne("bursaDAL.Modals.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("bursaDAL.Modals.FinancingInstitution", b =>
                {
                    b.Navigation("Bursaries");
                });

            modelBuilder.Entity("bursaDAL.Modals.Pocket", b =>
                {
                    b.Navigation("Allowances");
                });

            modelBuilder.Entity("bursaDAL.Modals.Role", b =>
                {
                    b.Navigation("Features");
                });
#pragma warning restore 612, 618
        }
    }
}
